import{G as a,M as o}from"./index-hn7FtaHd.js";class u{static async fetchAuthorizationURL(){const r=await a.get("/twitter/auth");return r.type==="error"?(a.showGenericError(r,"Twitter アカウントとの連携用の認証 URL を取得できませんでした。"),null):r.data.authorization_url}static async authWithPassword(r){const t=await a.post("/twitter/password-auth",r);if(t.type==="error"){if(typeof t.data.detail=="string"){if(t.data.detail.startsWith("Failed to authenticate with password")){const s=t.data.detail.match(/Message: (.+)\)/)[1];return o.error(`ログインに失敗しました。${s}`),!1}else if(t.data.detail.startsWith("Unexpected error occurred while authenticate with password")){const s=t.data.detail.match(/Message: (.+)\)/)[1];return o.error(`ログインフローの途中で予期せぬエラーが発生しました。${s}`),!1}else if(t.data.detail.startsWith("Failed to get user information"))return o.error("Twitter アカウントのユーザー情報の取得に失敗しました。"),!1}return a.showGenericError(t,"Twitter アカウントとの連携に失敗しました。"),!1}return!0}static async logoutAccount(r){const t=await a.delete(`/twitter/accounts/${r}`);return t.type==="error"?(a.showGenericError(t,"Twitter アカウントとの連携を解除できませんでした。"),!1):!0}static async sendTweet(r,t,s){const i=new FormData;i.append("tweet",t);for(const n of s)i.append("images",n);const e=await a.post(`/twitter/accounts/${r}/tweets`,i,{headers:{"Content-Type":"multipart/form-data"},timeout:10*60*1e3});return e.type==="error"?typeof e.data.detail=="string"?Number.isNaN(e.status)?{message:`ツイートの送信に失敗しました。(${e.data.detail})`,is_error:!0}:{message:`ツイートの送信に失敗しました。(HTTP Error ${e.status} / ${e.data.detail})`,is_error:!0}:{message:`ツイートの送信に失敗しました。(HTTP Error ${e.status})`,is_error:!0}:e.data.is_success===!1?{message:e.data.detail,is_error:!0}:{message:e.data.detail,is_error:!1}}}const l=u;export{l as T};
