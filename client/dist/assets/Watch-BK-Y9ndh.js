import{d as u,m as _,C as c,M as p,U as h,u as f,_ as g,r as k,o as y,k as $}from"./index-IQf8pYqM.js";import{W as S,I as m,P as Y,u as C}from"./PlayerController-DiZYTlwN.js";import{u as I}from"./ChannelsStore-Bp0uAihb.js";import"./ssrBoot-XBB8DhD_.js";import"./VSwitch-D_cArU48.js";import"./VSelect-DFHRn-me.js";import"./VAvatar-D0mimLe9.js";import"./VCard-Cuxc38S_.js";import"./swiper-DjBFJklb.js";import"./CommentMuteSettings-CXTrl7Vu.js";let n=null;const W=u({name:"Kakolog-Watch",components:{Watch:S},computed:{..._(C,f)},created(){this.init()},methods:{async init(){const i=this.$route.params.display_channel_id,d=this.$route.params.kakolog_period_id,r=c(d.split("-")[0]),e=c(d.split("-")[1]);if(e<r){p.error("指定された終了日時が開始日時より前です。"),this.$router.push({path:"/not-found/"});return}if(e>c()){p.error("指定された終了日時が未来の日付です。"),this.$router.push({path:"/not-found/"});return}if(r.isSame(e)){p.error("指定された開始日時と終了日時が同じです。"),this.$router.push({path:"/not-found/"});return}const s=I();await s.update();let o=null;if(i.length<=4?o=s.channels_list.GR.find(l=>l.id===i)??null:o=s.channels_list.BS.find(l=>l.id===i)??null,o===null){this.$router.push({path:"/not-found/"});return}await h.sleep(.1);const a=r.hour()<4?r.subtract(1,"day"):r,t=structuredClone(m);t.id=-100,t.channel=o,t.recorded_video.recording_start_time=r.toISOString(),t.recorded_video.recording_end_time=e.toISOString(),t.recording_start_margin=0,t.recording_end_margin=0,t.title=`${o.name}【ニコニコ実況・NX-Jikkyo】${a.format("YYYY年MM月DD日")}`,t.description="ニコニコ実況・NX-Jikkyo は、放送中のテレビ番組や起きているイベントに対して、みんなでコメントをし盛り上がりを共有する、リアルタイムコミュニケーションサービスです。<br>",t.detail={過去ログ再生について:`過去ログ再生機能では、ニコニコ実況 過去ログ API (https://jikkyo.tsukumijima.net) に保存されている、2009年11月から現在までの 旧ニコニコ実況・ニコ生統合後の新ニコニコ実況・NX-Jikkyo の過去ログコメントを再生できます。

現在は、Ch:${o.channel_number} ${o.name} の ${a.format("YYYY年MM月DD日 (dd)")} ${a.format("HH:mm")} 〜 ${e.format("HH:mm")} の過去ログコメントを、時系列に再生しています。`},t.start_time=r.toISOString(),t.end_time=e.toISOString(),t.duration=e.diff(r,"second"),this.playerStore.recorded_program=t,n=new Y("Video"),await n.init()},async destroy(){this.playerStore.recorded_program=m,n!==null&&(await n.destroy(),n=null)}}});function M(i,d,r,e,s,o){const a=k("Watch",!0);return y(),$(a,{playback_mode:"Video"})}const J=g(W,[["render",M]]);export{J as default};
